/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  LayoutControlValuesDto,
  LayoutControlValuesDto$inboundSchema,
  LayoutControlValuesDto$Outbound,
  LayoutControlValuesDto$outboundSchema,
} from "./layoutcontrolvaluesdto.js";

export type UpdateLayoutDto = {
  /**
   * Name of the layout
   */
  name: string;
  /**
   * Control values for the layout
   */
  controlValues: LayoutControlValuesDto;
};

/** @internal */
export const UpdateLayoutDto$inboundSchema: z.ZodType<
  UpdateLayoutDto,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  controlValues: LayoutControlValuesDto$inboundSchema,
});

/** @internal */
export type UpdateLayoutDto$Outbound = {
  name: string;
  controlValues: LayoutControlValuesDto$Outbound;
};

/** @internal */
export const UpdateLayoutDto$outboundSchema: z.ZodType<
  UpdateLayoutDto$Outbound,
  z.ZodTypeDef,
  UpdateLayoutDto
> = z.object({
  name: z.string(),
  controlValues: LayoutControlValuesDto$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateLayoutDto$ {
  /** @deprecated use `UpdateLayoutDto$inboundSchema` instead. */
  export const inboundSchema = UpdateLayoutDto$inboundSchema;
  /** @deprecated use `UpdateLayoutDto$outboundSchema` instead. */
  export const outboundSchema = UpdateLayoutDto$outboundSchema;
  /** @deprecated use `UpdateLayoutDto$Outbound` instead. */
  export type Outbound = UpdateLayoutDto$Outbound;
}

export function updateLayoutDtoToJSON(
  updateLayoutDto: UpdateLayoutDto,
): string {
  return JSON.stringify(UpdateLayoutDto$outboundSchema.parse(updateLayoutDto));
}

export function updateLayoutDtoFromJSON(
  jsonString: string,
): SafeParseResult<UpdateLayoutDto, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UpdateLayoutDto$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UpdateLayoutDto' from JSON`,
  );
}
