// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// EmailControlsDtoEditorType - Editor type of the layout.
type EmailControlsDtoEditorType string

const (
	EmailControlsDtoEditorTypeHTML  EmailControlsDtoEditorType = "html"
	EmailControlsDtoEditorTypeBlock EmailControlsDtoEditorType = "block"
)

func (e EmailControlsDtoEditorType) ToPointer() *EmailControlsDtoEditorType {
	return &e
}
func (e *EmailControlsDtoEditorType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "html":
		fallthrough
	case "block":
		*e = EmailControlsDtoEditorType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EmailControlsDtoEditorType: %v", v)
	}
}

type EmailControlsDto struct {
	// Content of the layout.
	Content string `json:"content"`
	// Editor type of the layout.
	EditorType EmailControlsDtoEditorType `json:"editorType"`
}

func (o *EmailControlsDto) GetContent() string {
	if o == nil {
		return ""
	}
	return o.Content
}

func (o *EmailControlsDto) GetEditorType() EmailControlsDtoEditorType {
	if o == nil {
		return EmailControlsDtoEditorType("")
	}
	return o.EditorType
}
