// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type LayoutsControllerListRequest struct {
	// Number of items to return per page
	Limit *float64 `queryParam:"style=form,explode=true,name=limit"`
	// Number of items to skip before starting to return results
	Offset *float64 `queryParam:"style=form,explode=true,name=offset"`
	// Direction of sorting
	OrderDirection *components.DirectionEnum `queryParam:"style=form,explode=true,name=orderDirection"`
	// Field to sort the results by
	OrderBy *components.LayoutResponseDtoSortField `queryParam:"style=form,explode=true,name=orderBy"`
	// Search query to filter layouts
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// A header for idempotency purposes
	IdempotencyKey *string `header:"style=simple,explode=false,name=idempotency-key"`
}

func (o *LayoutsControllerListRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *LayoutsControllerListRequest) GetOffset() *float64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *LayoutsControllerListRequest) GetOrderDirection() *components.DirectionEnum {
	if o == nil {
		return nil
	}
	return o.OrderDirection
}

func (o *LayoutsControllerListRequest) GetOrderBy() *components.LayoutResponseDtoSortField {
	if o == nil {
		return nil
	}
	return o.OrderBy
}

func (o *LayoutsControllerListRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *LayoutsControllerListRequest) GetIdempotencyKey() *string {
	if o == nil {
		return nil
	}
	return o.IdempotencyKey
}

type LayoutsControllerListResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// OK
	ListLayoutResponseDto *components.ListLayoutResponseDto
	Headers               map[string][]string
}

func (o *LayoutsControllerListResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *LayoutsControllerListResponse) GetListLayoutResponseDto() *components.ListLayoutResponseDto {
	if o == nil {
		return nil
	}
	return o.ListLayoutResponseDto
}

func (o *LayoutsControllerListResponse) GetHeaders() map[string][]string {
	if o == nil {
		return map[string][]string{}
	}
	return o.Headers
}
